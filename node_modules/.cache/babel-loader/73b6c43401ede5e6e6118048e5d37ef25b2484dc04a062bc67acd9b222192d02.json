{"ast":null,"code":"var _jsxFileName = \"/Users/faazshaikh/Quran-Memorization-App/src/components/BackendStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackendStatus = () => {\n  _s();\n  const [status, setStatus] = useState('checking');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    checkBackendStatus();\n  }, []);\n  const checkBackendStatus = async () => {\n    try {\n      const isConnected = await apiService.testConnection();\n      if (isConnected) {\n        setStatus('connected');\n        setMessage('✅ Backend is running and accessible');\n      } else {\n        setStatus('disconnected');\n        setMessage('❌ Cannot connect to backend. Please start the Spring Boot server.');\n      }\n    } catch (error) {\n      setStatus('error');\n      setMessage(`❌ Error: ${error.message}`);\n    }\n  };\n  const getStatusColor = () => {\n    switch (status) {\n      case 'connected':\n        return 'text-success';\n      case 'disconnected':\n        return 'text-danger';\n      case 'error':\n        return 'text-danger';\n      default:\n        return 'text-warning';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-info\",\n    role: \"alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"alert-heading\",\n      children: \"\\uD83D\\uDD27 Backend Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `mb-2 ${getStatusColor()}`,\n      children: status === 'checking' ? '🔄 Checking connection...' : message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), status !== 'connected' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-muted\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To fix this:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 42\n        }, this), \"1. Open terminal and run: \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"cd backend && mvn spring-boot:run\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 85\n        }, this), \"2. Wait for \\\"Started QuranMemorizationAppApplication\\\" message\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 74\n        }, this), \"3. Refresh this page\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm btn-outline-primary mt-2\",\n      onClick: checkBackendStatus,\n      disabled: status === 'checking',\n      children: status === 'checking' ? 'Checking...' : 'Test Again'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(BackendStatus, \"kOuCxF+FOj1AORffougFeEMBivM=\");\n_c = BackendStatus;\nexport default BackendStatus;\nvar _c;\n$RefreshReg$(_c, \"BackendStatus\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","BackendStatus","_s","status","setStatus","message","setMessage","checkBackendStatus","isConnected","testConnection","error","getStatusColor","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/faazshaikh/Quran-Memorization-App/src/components/BackendStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport apiService from '../services/api';\n\nconst BackendStatus = () => {\n  const [status, setStatus] = useState('checking');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    checkBackendStatus();\n  }, []);\n\n  const checkBackendStatus = async () => {\n    try {\n      const isConnected = await apiService.testConnection();\n      if (isConnected) {\n        setStatus('connected');\n        setMessage('✅ Backend is running and accessible');\n      } else {\n        setStatus('disconnected');\n        setMessage('❌ Cannot connect to backend. Please start the Spring Boot server.');\n      }\n    } catch (error) {\n      setStatus('error');\n      setMessage(`❌ Error: ${error.message}`);\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (status) {\n      case 'connected': return 'text-success';\n      case 'disconnected': return 'text-danger';\n      case 'error': return 'text-danger';\n      default: return 'text-warning';\n    }\n  };\n\n  return (\n    <div className=\"alert alert-info\" role=\"alert\">\n      <h6 className=\"alert-heading\">🔧 Backend Status</h6>\n      <p className={`mb-2 ${getStatusColor()}`}>\n        {status === 'checking' ? '🔄 Checking connection...' : message}\n      </p>\n      {status !== 'connected' && (\n        <div className=\"mt-2\">\n          <small className=\"text-muted\">\n            <strong>To fix this:</strong><br/>\n            1. Open terminal and run: <code>cd backend && mvn spring-boot:run</code><br/>\n            2. Wait for \"Started QuranMemorizationAppApplication\" message<br/>\n            3. Refresh this page\n          </small>\n        </div>\n      )}\n      <button \n        className=\"btn btn-sm btn-outline-primary mt-2\" \n        onClick={checkBackendStatus}\n        disabled={status === 'checking'}\n      >\n        {status === 'checking' ? 'Checking...' : 'Test Again'}\n      </button>\n    </div>\n  );\n};\n\nexport default BackendStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}